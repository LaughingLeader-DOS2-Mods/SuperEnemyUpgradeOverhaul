Version 1
SubGoalCombiner SGC_AND
INITSECTION
LLSENEMY_Auras_InitSettings();
KBSECTION

PROC
LLSENEMY_Auras_InitSettings()
THEN
LeaderLib_Auras_Register_TurnAura("LLENEMY_FIRE_BRAND_AURA", 1, 8.0, 1, 1, 0, 0, 1);
LeaderLib_Auras_Register_TurnAura("LLENEMY_VENOM_AURA", 1, 8.0, 1, 1, 0, 0, 1);

PROC
LeaderUpdater_ModUpdated("SuperEnemyUpgradeOverhaul", "LaughingLeader", (STRING)_OldVersion, (STRING)_NewVersion)
THEN
LLSENEMY_Auras_InitSettings();

//REGION STATUS_EVENTS
IF
CharacterStatusApplied(_Char, "LLENEMY_FIRE_BRAND_AURA", _Source)
THEN
LeaderLib_Auras_ApplyTurnAura(_Char, "LLENEMY_FIRE_BRAND_AURA");

IF
CharacterStatusRemoved(_Char, "LLENEMY_FIRE_BRAND_AURA", _Source)
THEN
LeaderLib_Auras_RemoveTurnAura(_Char, "LLENEMY_FIRE_BRAND_AURA");

IF
CharacterStatusApplied(_Char, "LLENEMY_VENOM_AURA", _Source)
THEN
LeaderLib_Auras_ApplyTurnAura(_Char, "LLENEMY_VENOM_AURA");

IF
CharacterStatusRemoved(_Char, "LLENEMY_VENOM_AURA", _Source)
THEN
LeaderLib_Auras_RemoveTurnAura(_Char, "LLENEMY_VENOM_AURA");
//END_REGION

//REGION PULSE_EVENTS
PROC
LeaderLib_Auras_OnTargetFound((GUIDSTRING)_Source, (GUIDSTRING)_Target, "LLENEMY_FIRE_BRAND_AURA")
AND
CharacterIsAlly((CHARACTERGUID)_Source, (CHARACTERGUID)_Target, 1)
THEN
LLSENEMY_Auras_ApplyAuraStatus(_Source, _Target, "LLENEMY_FIRE_BRAND");

PROC
LeaderLib_Auras_OnTargetFound((GUIDSTRING)_Source, (GUIDSTRING)_Target, "LLENEMY_VENOM_AURA")
AND
CharacterIsAlly((CHARACTERGUID)_Source, (CHARACTERGUID)_Target, 1)
THEN
LLSENEMY_Auras_ApplyAuraStatus(_Source, _Target, "LLENEMY_VENOM_COATING");

PROC
LeaderLib_Auras_OnTargetLost((GUIDSTRING)_Source, (GUIDSTRING)_Target, "LLENEMY_FIRE_BRAND_AURA")
AND
NOT DB_LeaderLib_Auras_Temp_NewTarget(_, _Target, "LLENEMY_FIRE_BRAND_AURA")
THEN
RemoveStatus(_Target, "LLENEMY_FIRE_BRAND");

PROC
LeaderLib_Auras_OnTargetLost((GUIDSTRING)_Source, (GUIDSTRING)_Target, "LLENEMY_VENOM_AURA")
AND
NOT DB_LeaderLib_Auras_Temp_NewTarget(_, _Target, "LLENEMY_VENOM_AURA")
THEN
RemoveStatus(_Target, "LLENEMY_VENOM_COATING");

PROC
LLSENEMY_Auras_ApplyAuraStatus((CHARACTERGUID)_Source, (CHARACTERGUID)_Ally, (STRING)_Status)
AND
HasActiveStatus(_Ally, _Status, 1)
AND
GetStatusTurns(_Ally, _Status, _Turns)
AND
_Turns < 2
AND
NRD_StatusGetHandle(_Ally, _Status, _Handle)
THEN
NRD_StatusSetReal(_Ally, _Handle, "CurrentLifeTime", 12.0);

PROC
LLSENEMY_Auras_ApplyAuraStatus((CHARACTERGUID)_Source, (CHARACTERGUID)_Ally, (STRING)_Status)
AND
HasActiveStatus(_Ally, _Status, 0)
THEN
ApplyStatus(_Ally, _Status, 12.0, 0, _Source);
//END_REGION

EXITSECTION
ENDEXITSECTION
ParentTargetEdge "LaughingLeader_SuperEnemyUpgradeOverhaul"