Version 1
SubGoalCombiner SGC_AND
INITSECTION
KBSECTION
//REGION SETTINGS
PROC
LLENEMY_Upgrades_RegisterAll((INTEGER)_HardModeEnabled)
THEN
LLENEMY_Upgrades_AddGroup("Buffs", "LLENEMY_BuffUpgradesDisabled", "LLENEMY_BuffRolled", "LLENEMY_BuffUpgradeAdded");
LLENEMY_Upgrades_AddType("Buffs", "Elite", 1, 99, 9);
LLENEMY_Upgrades_AddType("Buffs", "Normal", 100, 699, 5);
LLENEMY_Upgrades_AddType("Buffs", "Weak", 700, 999, 3);
DB_LLENEMY_Upgrades_TypeRollValues("Buffs", "Polymorph", 1, 999);
LLENEMY_Upgrades_AddType("Buffs", "Polymorph", 1, 999, 2);

LLENEMY_Upgrades_AddGroup("Auras", "LLENEMY_AuraUpgradesDisabled", "LLENEMY_AuraUpgradeRolled", "LLENEMY_AuraUpgradeAdded");
LLENEMY_Upgrades_AddType("Auras", "Auras_Main", 800, 898, 7);

LLENEMY_Upgrades_AddGroup("Immunities", "LLENEMY_ImmunityUpgradesDisabled", "LLENEMY_ImmunityUpgradeRolled", "LLENEMY_ImmunityUpgradeAdded");

PROC
LLENEMY_Upgrades_RegisterAll(0)
THEN
LLENEMY_Upgrades_AddType("Immunities", "Immunity", 666, 720, 12);
LLENEMY_Upgrades_AddType("Immunities", "Auras", 1, 126, 14);

PROC
LLENEMY_Upgrades_RegisterAll(1)
THEN
LLENEMY_Upgrades_AddType("Immunities", "Immunity", 666, 720, 12);
LLENEMY_Upgrades_AddType("Immunities", "Auras", 1, 240, 14);

PROC
LLENEMY_Upgrades_RegisterAll((INTEGER)_HardModeEnabled)
THEN
//Rolled separately, in addition to the previous types
LLENEMY_Upgrades_AddGroup("Bonus", "LLENEMY_BonusBuffUpgradesDisabled", "LLENEMY_BonusBuffRolled", "LLENEMY_BonusBuffUpgradeAdded");
LLENEMY_Upgrades_AddType("Bonus", "Infusion_Elite", 20, 45, 10);
LLENEMY_Upgrades_AddType("Bonus", "Infusion", 400, 460, 7);
LLENEMY_Upgrades_AddType("Bonus", "Special", 650, 800, 2);
 // For allowing nothing to be rolled, we set the MaxInt to 999.
DB_LLENEMY_Upgrades_TypeRollValues("Bonus", "TimeDelayed", 1, 999);
LLENEMY_Upgrades_AddType("Bonus", "TimeDelayed", 1, 999, 2);

PROC
LLENEMY_Upgrades_RegisterAll((INTEGER)_HardModeEnabled)
THEN
LLENEMY_Buffs_AddGrenadeSkill("Projectile_Grenade_ChemicalWarfare", 10);
LLENEMY_Buffs_AddGrenadeSkill("Projectile_Grenade_MindMaggot", 10);
LLENEMY_Buffs_AddGrenadeSkill("Projectile_Grenade_BlessedIce", 10);
LLENEMY_Buffs_AddGrenadeSkill("Projectile_Grenade_WaterBlessedBalloon", 10);
LLENEMY_Buffs_AddGrenadeSkill("Projectile_Grenade_MustardGas", 10);
LLENEMY_Buffs_AddGrenadeSkill("Projectile_Grenade_BlessedOilFlask", 10);
LLENEMY_Buffs_AddGrenadeSkill("Projectile_Grenade_CursedMolotov", 10);
LLENEMY_Buffs_AddGrenadeSkill("Projectile_Grenade_CursedPoisonFlask", 10);
LLENEMY_Buffs_AddGrenadeSkill("Projectile_Grenade_Love", 40);
LLENEMY_Buffs_AddGrenadeSkill("Projectile_Grenade_Terror", 40);
LLENEMY_Buffs_AddGrenadeSkill("Projectile_Grenade_Ice", 40);
LLENEMY_Buffs_AddGrenadeSkill("Projectile_Grenade_Holy", 40);
LLENEMY_Buffs_AddGrenadeSkill("Projectile_Grenade_Tremor", 40);
LLENEMY_Buffs_AddGrenadeSkill("Projectile_Grenade_SmokeBomb", 70);
LLENEMY_Buffs_AddGrenadeSkill("Projectile_Grenade_Taser", 50);
LLENEMY_Buffs_AddGrenadeSkill("Projectile_Grenade_ArmorPiercing", 50);
LLENEMY_Buffs_AddGrenadeSkill("Projectile_Grenade_Nailbomb", 100);
LLENEMY_Buffs_AddGrenadeSkill("Projectile_Grenade_OilFlask", 100);
LLENEMY_Buffs_AddGrenadeSkill("Projectile_Grenade_WaterBalloon", 100);
LLENEMY_Buffs_AddGrenadeSkill("Projectile_Grenade_PoisonFlask", 100);
LLENEMY_Buffs_AddGrenadeSkill("Projectile_Grenade_Molotov", 89);
LLENEMY_Buffs_AddGrenadeSkill("Projectile_Grenade_Flashbang", 60);

PROC
LLENEMY_Upgrades_Register_TypeUpgrades("Buffs", "Elite", (INTEGER)_HardModeEnabled)
THEN
DB_LLENEMY_Statuses_FixedDuration("DOUBLE_DAMAGE");
DB_LLENEMY_Statuses_FixedDuration("DEATH_RESIST");
LLENEMY_Upgrades_AddStatus("Buffs", "Elite", "DEATH_RESIST", 40, 3, 6.0);
LLENEMY_Upgrades_AddStatus("Buffs", "Elite", "DEATH_WISH", 200, 8, 24.0);
LLENEMY_Upgrades_AddStatus("Buffs", "Elite", "DOUBLE_DAMAGE", 10, 12, 12.0);
LLENEMY_Upgrades_AddStatus("Buffs", "Elite", "FLAMING_CRESCENDO", 90, 4, 12.0);
LLENEMY_Upgrades_AddStatus("Buffs", "Elite", "LLENEMY_ACTIVATE_FLAMING_TONGUES", 160, 5, 0.0);
LLENEMY_Upgrades_AddStatus("Buffs", "Elite", "LLENEMY_CHICKEN_OVERLORD", 20, 9);
LLENEMY_Upgrades_AddStatus("Buffs", "Elite", "SPARK_MASTER", 260, 6);

PROC
LLENEMY_Upgrades_Register_TypeUpgrades("Buffs", "Normal", (INTEGER)_HardModeEnabled)
THEN
LLENEMY_Upgrades_AddStatus("Buffs", "Normal", "BLESSED", 20, 2, 18.0);
LLENEMY_Upgrades_AddStatus("Buffs", "Normal", "BREATHING_BUBBLE", 40, 3, 18.0);
LLENEMY_Upgrades_AddStatus("Buffs", "Normal", "ETHEREAL_SOLES", 120, 1, 12.0);
LLENEMY_Upgrades_AddStatus("Buffs", "Normal", "FIREBLOOD", 60, 2);
LLENEMY_Upgrades_AddStatus("Buffs", "Normal", "FORTIFIED", 130, 2, 24.0);
LLENEMY_Upgrades_AddStatus("Buffs", "Normal", "MAGIC_SHELL", 130, 2, 12.0);
LLENEMY_Upgrades_AddStatus("Buffs", "Normal", "LLENEMY_DEMONIC_HASTED", 10, 2);
LLENEMY_Upgrades_AddStatus("Buffs", "Normal", "LLENEMY_HERBMIX_COURAGE", 200, 2);
LLENEMY_Upgrades_AddStatus("Buffs", "Normal", "LLENEMY_HERBMIX_FEROCITY", 200, 2);
LLENEMY_Upgrades_AddStatus("Buffs", "Normal", "LLENEMY_GRANADA", 90, 6);
LLENEMY_Upgrades_AddStatus("Buffs", "Normal", "SPARKING_SWINGS", 140, 4);

PROC
LLENEMY_Upgrades_Register_TypeUpgrades("Buffs", "Weak", (INTEGER)_HardModeEnabled)
THEN
LLENEMY_Upgrades_AddStatus("Buffs", "Weak", "CLEAR_MINDED", 180, 1);
LLENEMY_Upgrades_AddStatus("Buffs", "Weak", "DRUNK", 19, 0, 12.0);
LLENEMY_Upgrades_AddStatus("Buffs", "Weak", "LLENEMY_FARSIGHT", 50, 2);
LLENEMY_Upgrades_AddStatus("Buffs", "Weak", "FORTIFIED", 100, 2, 12.0);
LLENEMY_Upgrades_AddStatus("Buffs", "Weak", "HASTED", 120, 1, 12.0);
LLENEMY_Upgrades_AddStatus("Buffs", "Weak", "IMPROVED_INITIATIVE", 160, 1);
LLENEMY_Upgrades_AddStatus("Buffs", "Weak", "MAGIC_SHELL", 100, 2, 12.0);
LLENEMY_Upgrades_AddStatus("Buffs", "Weak", "RESTED", 190, 2);

PROC
LLENEMY_Upgrades_Register_TypeUpgrades("Buffs", "Polymorph", (INTEGER)_HardModeEnabled)
THEN
LLENEMY_Upgrades_AddStatusToRange("Buffs", "Polymorph", "LLENEMY_SKILL_MEDUSA_HEAD", 1, 23, 7, 24.0);
LLENEMY_Upgrades_AddStatusToRange("Buffs", "Polymorph", "LLENEMY_SKILL_SPIDER_LEGS", 200, 259, 4);
LLENEMY_Upgrades_AddStatusToRange("Buffs", "Polymorph", "LLENEMY_SKILL_WINGS", 550, 641, 2);
LLENEMY_Upgrades_AddStatusToRange("Buffs", "Polymorph", "LLENEMY_SKILL_HORNS", 800, 999, 1);

PROC
LLENEMY_Upgrades_Register_TypeUpgrades("Auras", "Auras_Main", (INTEGER)_HardModeEnabled)
THEN
LLENEMY_Upgrades_AddStatus("Auras", "Auras_Main", "FAVOURABLE_WIND_AURA", 210, 3, 12.0);
LLENEMY_Upgrades_AddStatus("Auras", "Auras_Main", "LLENEMY_FIRE_BRAND_AURA", 120, 4);
LLENEMY_Upgrades_AddStatus("Auras", "Auras_Main", "FROST_AURA", 80, 2);
LLENEMY_Upgrades_AddStatus("Auras", "Auras_Main", "GUARDIAN_ANGEL_AURA", 100, 3);
LLENEMY_Upgrades_AddStatus("Auras", "Auras_Main", "VACUUM_AURA", 50, 5, 6.0);
LLENEMY_Upgrades_AddStatus("Auras", "Auras_Main", "VAMPIRISM_AURA", 160, 5);
LLENEMY_Upgrades_AddStatus("Auras", "Auras_Main", "LLENEMY_VENOM_AURA", 120, 4);
LLENEMY_Upgrades_AddStatus("Auras", "Auras_Main", "LLENEMY_ACTIVATE_HEALING_TEARS", 60, 5, 0.0);

PROC
LLENEMY_Upgrades_Register_TypeUpgrades("Immunities", "Auras", (INTEGER)_HardModeEnabled)
THEN
DB_LLENEMY_Statuses_FixedDuration("ELEMENTAL_IMMUNITY_AURA");
DB_LLENEMY_Statuses_FixedDuration("PHYSICAL_IMMUNITY_AURA");
LLENEMY_Upgrades_AddStatus("Immunities", "Auras", "AIR_IMMUNITY_AURA", 50, 7, 12.0);
LLENEMY_Upgrades_AddStatus("Immunities", "Auras", "EARTH_IMMUNITY_AURA", 40, 7, 12.0);
LLENEMY_Upgrades_AddStatus("Immunities", "Auras", "ELEMENTAL_IMMUNITY_AURA", 10, 9, 6.0);
LLENEMY_Upgrades_AddStatus("Immunities", "Auras", "EVASION_AURA", 40, 7, 6.0);
LLENEMY_Upgrades_AddStatus("Immunities", "Auras", "WATER_IMMUNITY_AURA", 40, 7, 12.0);
LLENEMY_Upgrades_AddStatus("Immunities", "Auras", "FIRE_IMMUNITY_AURA", 40, 7, 12.0);
LLENEMY_Upgrades_AddStatus("Immunities", "Auras", "PHYSICAL_IMMUNITY_AURA", 10, 9, 6.0);

PROC
LLENEMY_Upgrades_Register_TypeUpgrades("Immunities", "Immunity", (INTEGER)_HardModeEnabled)
THEN
DB_LLENEMY_Statuses_FixedDuration("INVULNERABLE");
DB_LLENEMY_Statuses_FixedDuration("EVADING");
LLENEMY_Upgrades_AddStatus("Immunities", "Immunity", "INVULNERABLE", 10, 6, 6.0);
LLENEMY_Upgrades_AddStatus("Immunities", "Immunity", "EVADING", 30, 4, 6.0);
LLENEMY_Upgrades_AddStatus("Immunities", "Immunity", "ELECTRIC_SKIN", 60, 4, 12.0);
LLENEMY_Upgrades_AddStatus("Immunities", "Immunity", "FIRE_SKIN", 40, 4, 12.0);
LLENEMY_Upgrades_AddStatus("Immunities", "Immunity", "ICE_SKIN", 60, 4, 12.0);
LLENEMY_Upgrades_AddStatus("Immunities", "Immunity", "POISON_SKIN", 110, 4, 12.0);
LLENEMY_Upgrades_AddStatus("Immunities", "Immunity", "IMMUNE_TO_BURNING", 120, 3, 18.0);
LLENEMY_Upgrades_AddStatus("Immunities", "Immunity", "IMMUNE_TO_ELECTRIFYING", 120, 3, 18.0);
LLENEMY_Upgrades_AddStatus("Immunities", "Immunity", "IMMUNE_TO_POISONING", 129, 3, 18.0);
LLENEMY_Upgrades_AddStatus("Immunities", "Immunity", "LLENEMY_IMMUNITY_PIERCING", 120, 4, 36.0);
LLENEMY_Upgrades_AddStatus("Immunities", "Immunity", "LLENEMY_IMMUNITY_LOSECONTROL", 360, 6);

PROC
LLENEMY_Upgrades_Register_TypeUpgrades("Bonus", "Infusion", (INTEGER)_HardModeEnabled)
THEN
LLENEMY_Upgrades_AddStatus("Bonus", "Infusion", "LLENEMY_INF_ACID", 60, 4, 24.0);
LLENEMY_Upgrades_AddStatus("Bonus", "Infusion", "LLENEMY_INF_BLESSED_ICE", 60, 5, 24.0);
LLENEMY_Upgrades_AddStatus("Bonus", "Infusion", "LLENEMY_INF_BLOOD", 140, 5, 24.0);
LLENEMY_Upgrades_AddStatus("Bonus", "Infusion", "LLENEMY_INF_CURSED_ELECTRIC", 50, 5, 24.0);
LLENEMY_Upgrades_AddStatus("Bonus", "Infusion", "LLENEMY_INF_ELECTRIC", 110, 5, 24.0);
LLENEMY_Upgrades_AddStatus("Bonus", "Infusion", "LLENEMY_INF_FIRE", 110, 5, 24.0);
LLENEMY_Upgrades_AddStatus("Bonus", "Infusion", "LLENEMY_INF_NECROFIRE", 60, 6, 24.0);
LLENEMY_Upgrades_AddStatus("Bonus", "Infusion", "LLENEMY_INF_OIL", 139, 5, 24.0);
LLENEMY_Upgrades_AddStatus("Bonus", "Infusion", "LLENEMY_INF_POISON", 140, 4, 24.0);
LLENEMY_Upgrades_AddStatus("Bonus", "Infusion", "LLENEMY_INF_WATER", 130, 3, 24.0);
//Can overlap with other infusions
LLENEMY_Upgrades_AddStatusToRange("Bonus", "Infusion", "LLENEMY_INF_RANGED", 199, 499, 4);
LLENEMY_Upgrades_AddStatusToRange("Bonus", "Infusion", "LLENEMY_INF_POWER", 799, 999, 4);

PROC
LLENEMY_Upgrades_Register_TypeUpgrades("Bonus", "Infusion_Elite", (INTEGER)_HardModeEnabled)
THEN
LLENEMY_Upgrades_AddStatus("Bonus", "Infusion_Elite", "LLENEMY_INF_ACID_G", 60, 8, 36.0);
LLENEMY_Upgrades_AddStatus("Bonus", "Infusion_Elite", "LLENEMY_INF_BLESSED_ICE_G", 60, 8, 36.0);
LLENEMY_Upgrades_AddStatus("Bonus", "Infusion_Elite", "LLENEMY_INF_BLOOD_G", 140, 6, 36.0);
LLENEMY_Upgrades_AddStatus("Bonus", "Infusion_Elite", "LLENEMY_INF_CURSED_ELECTRIC_G", 50, 9, 36.0);
LLENEMY_Upgrades_AddStatus("Bonus", "Infusion_Elite", "LLENEMY_INF_ELECTRIC_G", 110, 6, 36.0);
LLENEMY_Upgrades_AddStatus("Bonus", "Infusion_Elite", "LLENEMY_INF_FIRE_G", 110, 7, 36.0);
LLENEMY_Upgrades_AddStatus("Bonus", "Infusion_Elite", "LLENEMY_INF_NECROFIRE_G", 60, 10, 36.0);
LLENEMY_Upgrades_AddStatus("Bonus", "Infusion_Elite", "LLENEMY_INF_OIL_G", 139, 6, 36.0);
LLENEMY_Upgrades_AddStatus("Bonus", "Infusion_Elite", "LLENEMY_INF_POISON_G", 140, 6, 36.0);
LLENEMY_Upgrades_AddStatus("Bonus", "Infusion_Elite", "LLENEMY_INF_WATER_G", 130, 4, 48.0);
//Can overlap with other infusions
LLENEMY_Upgrades_AddStatusToRange("Bonus", "Infusion_Eite", "LLENEMY_INF_SHADOW", 1, 99, 7);
LLENEMY_Upgrades_AddStatusToRange("Bonus", "Infusion_Eite", "LLENEMY_INF_WARP", 566, 666, 7);

PROC
LLENEMY_Upgrades_Register_TypeUpgrades("Bonus", "Special", (INTEGER)_HardModeEnabled)
THEN
//Special
LLENEMY_Upgrades_AddStatusToRange("Bonus", "Special", "LLENEMY_DOUBLE_DIP", 1, 30, 4, 0.0);
LLENEMY_Upgrades_AddStatusToRange("Bonus", "Special", "LLENEMY_PERSEVERANCE_MASTERY", 300, 375, 6);
LLENEMY_Upgrades_AddStatusToRange("Bonus", "Special", "LLENEMY_SEEKER", 800, 835, 6);

//Upgrades that don't give immediate bonuses.
PROC
LLENEMY_Upgrades_Register_TypeUpgrades("Bonus", "TimeDelayed", (INTEGER)_HardModeEnabled)
THEN
LLENEMY_Upgrades_AddStatusToRange("Bonus", "TimeDelayed", "LLENEMY_GATHERING_POWER", 1, 24, 2, 24.0);
LLENEMY_Upgrades_AddStatusToRange("Bonus", "TimeDelayed", "LLENEMY_RAGE", 666, 720, 8);

PROC
LLENEMY_Buffs_AddGrenadeSkill((STRING)_Skill, (INTEGER)_Range)
AND
NOT DB_LLENEMY_LastGrenadeInt(_,_)
THEN
DB_LLENEMY_LastGrenadeInt(1, 1);

PROC
LLENEMY_Buffs_AddGrenadeSkill((STRING)_Skill, (INTEGER)_Range)
AND
DB_LLENEMY_LastGrenadeInt(_StartInt, _LastInt)
AND
IntegerSum(_StartInt, _Range, _EndInt)
AND
IntegerSum(_EndInt, 1, _NextStartInt)
THEN
DB_LLENEMY_GrenadeSkills(_Skill, _StartInt, _EndInt);
NOT DB_LLENEMY_LastGrenadeInt(_StartInt, _LastInt);
DB_LLENEMY_LastGrenadeInt(_NextStartInt, _EndInt);
//END_REGION

//REGION IMMERSION
QRY
LLENEMY_Upgrades_QRY_ApplyStatus((CHARACTERGUID)_Character, (STRING)_Group, (STRING)_Type, "BLESSED", (REAL)_Duration, (INTEGER)_IsHardMode)
AND
IsTagged(_Character, "VOIDWOKEN", 1)
THEN
LeaderLog_Log("DEBUG", "[LLENEMY_02_StatusBuffs:CanApplyUpgrade] Redirected upgrade [BLESSED] on a Voidwoken to [LLENEMY_VOID_EMPOWERED].");
LLENEMY_Upgrades_ApplyStatus(_Character, _Group, _Type, "LLENEMY_VOID_EMPOWERED", _Duration, _IsHardMode);

PROC
LLENEMY_Upgrades_CanApplyUpgrade((CHARACTERGUID)_Character, "Buffs", "Polymorph", (STRING)_Status, (REAL)_Duration)
AND
NOT LeaderLib_Helper_QRY_CharacterIsHumanoid(_Character)
THEN
DB_LLENEMY_StatusUpgradeBlocked(_Character, "Buffs", "Polymorph", _Status);
//LeaderLog_Log("DEBUG", "[LLENEMY_02_StatusBuffs:CanApplyUpgrade] Blocked upgrade [",_Status,"] from applying to a non-humanoid character.");
//LLENEMY_Upgrades_RedirectUpgrade(_Character, "Buffs", "Polymorph", _Status, "RESTED");
//LLENEMY_Upgrades_RedirectUpgrade(_Character, "Buffs", "Polymorph", _Status, "CLEAR_MINDED");

// Sparked statuses for characters with ranged weapons
PROC
LLENEMY_Upgrades_CanApplyUpgrade((CHARACTERGUID)_Character, (STRING)_Group, (STRING)_Type, (STRING)_Status, (REAL)_Duration)
AND
GetStatusType(_Status, "SPARK")
AND
CharacterGetEquippedWeapon(_Character, (ITEMGUID)_Weapon)
AND
_Weapon != NULL_00000000-0000-0000-0000-000000000000
AND
LeaderLib_Helper_QRY_IsRangedWeapon(_Weapon)
THEN
DB_LLENEMY_StatusUpgradeBlocked(_Character, _Group, _Type, _Status);
//END_REGION

//REGION GRENADE_ENTHUSIAST
//Prevent weird things like voidlings from getting grenades
PROC
LLENEMY_Upgrades_CanApplyUpgrade((CHARACTERGUID)_Character, (STRING)_Group, (STRING)_Type, "LLENEMY_GRANADA", (REAL)_Duration)
AND
NOT LeaderLib_Helper_QRY_CharacterIsHumanoid(_Character)
THEN
DB_LLENEMY_StatusUpgradeBlocked(_Character, _Group, _Type, "LLENEMY_GRANADA");
LeaderLog_Log("DEBUG", "[LLENEMY_02_StatusBuffs:CanApplyUpgrade] Blocked upgrade [LLENEMY_GRANADA] from applying to a non-humanoid.");

IF
CharacterStatusApplied(_Enemy, "LLENEMY_GRANADA", _)
THEN
LeaderLib_ToggleScripts_EnableScriptForObject(_Enemy, "LLENEMY_Granada_Active", "EnemyUpgradeOverhaul");

//Guaranteed talent status
/*
IF
CharacterStatusApplied(_Enemy, "LLENEMY_GRANADA", _)
AND
ObjectGetFlag(_Enemy, "LLENEMY_TalentUpgradeAdded", 0)
AND
HasActiveStatus(_Enemy, "LLENEMY_TALENT_UNSTABLE", 0)
AND
DB_LLENEMY_Upgrades_Statuses(_Group, _Type, "LLENEMY_TALENT_UNSTABLE", _MinRoll, _MaxRoll, _Duration, _CP)
THEN
LLENEMY_Upgrades_ApplyUpgrade(_Enemy, _Group, _Type, "LLENEMY_TALENT_UNSTABLE", _Duration, _CP);
ObjectSetFlag(_Enemy, "LLENEMY_TalentUpgradeAdded");
*/

IF
CharacterStatusApplied(_Enemy, "LLENEMY_GRANADA", _)
AND
ObjectGetFlag(_Enemy, "LLENEMY_AddedGrenadeStash", 0)
THEN
CharacterGiveReward(_Enemy, "LLENEMY_GranadaStatus_GrenadeStash", 1);
//CharacterGiveReward(CharacterGiveReward, "CheatGrenades", 1); // For crazy people
ObjectSetFlag(_Enemy, "LLENEMY_AddedGrenadeStash", 0);
//END_REGION

//REGION SPECIAL_UPGRADES
IF
CharacterStatusApplied(_Character, "LLENEMY_DOUBLE_DIP", _)
THEN
PlayEffect(_Character, "LLENEMY_FX_Status_DoubleDip_Overlay_01", "");
LLENEMY_Upgrades_ResetRolledFlags(_Character);
LLENEMY_Upgrades_RollForUpgrades(_Character);
LLENEMY_Upgrades_OnRollingDone(_Character);
RemoveStatus(_Character, "LLENEMY_DOUBLE_DIP");
//END_REGION

//REGION ACTIVE_DEFENSE_TYPES
/* [OSITOOLS_ONLY]
IF
CharacterStatusApplied(_Char, "LLENEMY_ACTIVATE_FLAMING_TONGUES", _Cause)
AND
NRD_ApplyActiveDefense(_Char, "FLAMING_TONGUES", -1.0, _Handle)
THEN
DB_NOOP(1);

IF
CharacterStatusApplied(_Char, "LLENEMY_ACTIVATE_HEALING_TEARS", _Cause)
AND
NRD_ApplyActiveDefense(_Char, "HEALING_TEARS", -1.0, _Handle)
THEN
DB_NOOP(1);
*/
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader_EnemyUpgradeOverhaul"