Version 1
SubGoalCombiner SGC_AND
INITSECTION
KBSECTION
// [BEGIN_NO_OSITOOLS]
IF
AttackedByObject((CHARACTERGUID)_Goblin, _, (CHARACTERGUID)_Source, _, _DamageSource)
AND
IsTagged(_Goblin, "LLENEMY_TreasureGoblin", 1)
AND
NOT DB_LLENEMY_TreasureGoblins_Temp_JustHit(_Goblin, _Source)
AND
LeaderLib_String_QRY_EqualsAny(_DamageSource, "Attack", "") // Ignore surfaces, statuses etc
AND
CharacterIsPlayer(_Source, 1)
THEN
DB_LLENEMY_TreasureGoblins_Temp_JustHit(_Goblin, _Source);
LeaderLib_Variables_ModifyVariableInt(_Goblin, "LLENEMY_TreasureGoblin_TotalHits", 1);
LeaderLib_Timers_StartCharacterCharacterTimer(_Goblin, _Source, 550, "Timers_LLENEMY_TreasureGoblins_ClearJustHit", "LLENEMY_TreasureGoblins_ClearJustHit");

IF
CharacterStatusApplied(_Goblin, _Status, _Source)
AND
IsTagged(_Goblin, "LLENEMY_TreasureGoblin", 1)
AND
GetStatusType(_Status, "DAMAGE_ON_MOVE")
THEN
RemoveStatus(_Goblin, _Status);
CharacterStatusText(_Goblin, "LLENEMY_StatusText_ImmuneToDamageOnMove");
// [END_NO_OSITOOLS]

/* [OSITOOLS_ONLY]
IF
NRD_OnHit((CHARACTERGUID)_Goblin, (CHARACTERGUID)_Source, _Damage, _Handle)
AND
NOT DB_LLENEMY_TreasureGoblins_Temp_JustHit(_Goblin, _)
AND
_Damage > 0
AND
IsTagged(_Goblin, "LLENEMY_TreasureGoblin", 1)
AND
CharacterIsPlayer(_Source, 1)
AND
LeaderLib_Hit_QRY_HitSucceeded(_Goblin, _Handle, 0)
AND
LeaderLib_Hit_QRY_HitDirectly(_Goblin, _Handle, 0)
THEN
DB_LLENEMY_TreasureGoblins_Temp_JustHit(_Goblin, _Source);
LeaderLib_Variables_ModifyVariableInt(_Goblin, "LLENEMY_TreasureGoblin_TotalHits", 1);
//LeaderLib_Timers_StartCharacterCharacterTimer(_Goblin, _Source, 550, "Timers_LLENEMY_TreasureGoblins_ClearJustHit", "LLENEMY_TreasureGoblins_ClearJustHit");
LeaderLib_Timers_StartObjectObjectTimer(_Goblin, _Source, 550, "Timers_LLENEMY_TreasureGoblins_ClearJustHit", "LLENEMY_TreasureGoblins_ClearJustHit");
*/

/*
IF
NRD_OnStatusAttempt((CHARACTERGUID)_Goblin, _Status, _Handle, _Source)
AND
IsTagged(_Goblin, "LLENEMY_TreasureGoblin", 1)
AND
GetStatusType(_Status, "DAMAGE_ON_MOVE")
THEN
NRD_StatusPreventApply(_Goblin, _Handle, 1);
CharacterStatusText(_Goblin, "LLENEMY_StatusText_ImmuneToDamageOnMove");
*/

PROC
LeaderLib_Timers_ObjectObjectTimerFinished(_Goblin, _Source, "LLENEMY_TreasureGoblins_ClearJustHit")
AND
DB_LLENEMY_TreasureGoblins_Temp_JustHit((CHARACTERGUID)_Goblin, (CHARACTERGUID)_Source)
THEN
NOT DB_LLENEMY_TreasureGoblins_Temp_JustHit(_Goblin, _Source);

IF
CharacterCharacterEvent(_Goblin, _Source, "LLENEMY_TreasureGoblins_ClearJustHit")
AND
DB_LLENEMY_TreasureGoblins_Temp_JustHit(_Goblin, _Source)
THEN
NOT DB_LLENEMY_TreasureGoblins_Temp_JustHit(_Goblin, _Source);

IF
OnStageChanged((CHARACTERGUID)_Goblin, 0)
AND
DB_LLENEMY_TreasureGoblins_Temp_Active(_Goblin)
THEN
NOT DB_LLENEMY_TreasureGoblins_Temp_Active(_Goblin);
//RemoveTemporaryCharacter(_Goblin);
LLENEMY_Rewards_TreasureGoblin_ToggleScript(0);

/*
IF
ObjectEnteredCombat((CHARACTERGUID)_Goblin, _)
AND
DB_LLENEMY_TreasureGoblins_Temp_Active(_Goblin)
THEN
JumpToTurn(_Goblin);
*/

IF
RegionEnded(_)
THEN
LeaderLib_ToggleScripts_DisableScript("LLENEMY_TreasureGoblin_Active", "EnemyUpgradeOverhaul");

EXITSECTION
SysClear("DB_LLENEMY_TreasureGoblins_Temp_Active", 1);
SysClear("DB_LLENEMY_TreasureGoblins_Temp_JustHit", 2);
ENDEXITSECTION
ParentTargetEdge "LLENEMY_80_ToggledScripts"