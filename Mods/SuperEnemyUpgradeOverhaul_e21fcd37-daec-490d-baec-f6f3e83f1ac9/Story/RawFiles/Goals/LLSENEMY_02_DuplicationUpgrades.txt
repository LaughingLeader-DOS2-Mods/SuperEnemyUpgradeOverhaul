Version 1
SubGoalCombiner SGC_AND
INITSECTION
KBSECTION

PROC
LLENEMY_Duplication_AddToBlacklist((CHARACTERGUID)_Char)
THEN
DB_LLENEMY_Duplication_Blacklist(_Char);

QRY
LLENEMY_Duplication_QRY_CanDuplicate((CHARACTERGUID)_Char)
AND
NOT DB_LLENEMY_Duplication_Blacklist(_Char)
THEN
DB_NOOP(1);

//REGION COPY_STATUSES
QRY
LLENEMY_Duplication_QRY_IgnoreStatus((CHARACTERGUID)_Dupe, (STRING)_Status, (REAL)_Duration)
AND
NOT DB_LLENEMY_Duplication_IgnoredStatus(_Status)
AND
DB_LLENEMY_IgnoredDuplicantStatuses(_Status)
THEN
DB_LLENEMY_Duplication_IgnoredStatus(_Status);

QRY
LLENEMY_Duplication_QRY_IgnoreStatus((CHARACTERGUID)_Dupe, (STRING)_Status)
AND
NOT DB_LLENEMY_Duplication_IgnoredStatus(_Status)
AND
GetStatusType(_Status, _StatusType)
AND
DB_LLENEMY_IgnoredDuplicantStatusTypes(_StatusType)
THEN
DB_LLENEMY_Duplication_IgnoredStatus(_Status);

QRY
LLENEMY_Duplication_QRY_CanCopyStatus((CHARACTERGUID)_Dupe, (STRING)_Status)
AND
NOT DB_LeaderLib_EngineStatus(_Status)
AND
NOT DB_LLENEMY_Duplication_IgnoredStatus(_Status)
AND
NOT LLENEMY_Duplication_QRY_IgnoreStatus(_Dupe, _Status)
THEN
DB_NOOP(1);

IF
StoryEvent((CHARACTERGUID)_Char, "DummyIgnoreEvent")
AND
LLENEMY_Duplication_QRY_CanCopyStatus(_Char, "Test")
THEN
DB_NOOP(1);
//END_REGION

//REGION DUPE_ARENA
PROC
LLENEMY_Duplication_SetupArena((CHARACTERGUID)_Source, (CHARACTERGUID)_Dupe)
AND
//DB_ArenaPresets_Mobs(_Arena, _Source, _Trigger)
DB_Arena_MobParticipants(_Inst, _Source, _Trig, _Team)
THEN
DB_Arena_MobParticipants(_Inst, _Dupe, _Trig, _Team);
SetInArena(_Dupe, 1);
SetFaction(_Dupe, _Team);
//END_REGION

//REGION COMBAT_HANDLING
PROC
LLENEMY_Duplication_AddActive((CHARACTERGUID)_Source, (CHARACTERGUID)_Dupe, (STRING)_Region)
THEN
DB_LLENEMY_Duplication_Temp_Active(_Source, _Dupe, _Region);

IF
StoryEvent((CHARACTERGUID)_Dupe, "LLENEMY_DupeCharacterTeleported")
AND
DB_LLENEMY_Duplication_Temp_Active(_Source, _Dupe, _Region)
AND
CharacterIsInCombat(_Dupe, 0)
AND
CharacterIsInCombat(_Source, 0)
THEN
SetOnStage(_Dupe, 0);

IF
StoryEvent((CHARACTERGUID)_Dupe, "LLENEMY_DupeCharacterTeleported")
AND
ObjectIsOnStage(_Dupe, 0)
AND
DB_LLENEMY_Duplication_Temp_Active(_Source, _Dupe, _Region)
AND
CharacterIsInCombat(_Source, 1)
AND
CharacterIsDead(_Dupe, 0)
THEN
SetOnStage(_Dupe, 1);
CharacterSetDetached(_Dupe, 0);

IF
ObjectEnteredCombat((CHARACTERGUID)_Source, _CombatID)
AND
DB_LLENEMY_Duplication_Temp_Active(_Source, _Dupe, _Region)
AND
CharacterIsDead(_Dupe, 0)
AND
ObjectIsOnStage(_Dupe, 0)
THEN
TeleportTo(_Dupe, _Source, "LLENEMY_Dupe_OnDupeJoinedCombat", 0, 1);

IF
StoryEvent((CHARACTERGUID)_Dupe, "LLENEMY_Dupe_OnDupeJoinedCombat")
THEN
SetOnStage(_Dupe, 1);
CharacterSetDetached(_Dupe, 0);

IF
ObjectLeftCombat((CHARACTERGUID)_Source, _CombatID)
AND
DB_LLENEMY_Duplication_Temp_Active(_Source, _Dupe, _Region)
AND
CharacterIsDead(_Source, 0)
AND
CharacterIsDead(_Dupe, 0)
AND
ObjectIsOnStage(_Dupe, 1)
THEN
LeaveCombat(_Dupe);
SetOnStage(_Dupe, 0);

IF
CharacterRelationChangedTo(_Source, _Target, _Attitude)
AND
DB_LLENEMY_Duplication_Temp_Active(_Source, _Dupe, _Region)
AND
CharacterIsDead(_Dupe, 0)
THEN
ChangeAttitude(_Dupe, _Target, _Attitude);
//END_REGION

//REGION DEATH_CLEANUP
IF
CharacterDied(_Dupe)
AND
IsTagged(_Dupe, "LLENEMY_Duplicant", 1)
THEN
SetOnStage(_Dupe, 0);

IF
CharacterWentOnStage(_Dupe, 1)
AND
IsTagged(_Dupe, "LLENEMY_Duplicant", 1)
AND
CharacterIsDead(_Dupe, 1)
THEN
SetOnStage(_Dupe, 0);

IF
CharacterDied(_Dupe)
AND
DB_LLENEMY_Duplication_Temp_Active(_Source, _Dupe, _Region)
AND
NOT DB_LLENEMY_Talents_Temp_ReviveNext(_Dupe, _)
THEN
NOT DB_LLENEMY_Duplication_Temp_Active(_Source, _Dupe, _Region);
LeaderLib_Tags_ClearAllPreservedTagData(_Dupe);
SetOnStage(_Dupe, 0);

IF
RegionEnded(_Region)
AND
DB_LLENEMY_Duplication_Temp_Active(_Source, _Dupe, _Region)
THEN
NOT DB_LLENEMY_Duplication_Temp_Active(_Source, _Dupe, _Region);
LeaderLib_Tags_ClearAllPreservedTagData(_Dupe);
SetOnStage(_Dupe, 0);
//END_REGION

/*
IF
CharacterStatusRemoved(_Dupe, "LEADERLIB_RECALC", _)
AND
DB_LLENEMY_Duplication_Temp_Active(_Source, _Dupe, _Region)
THEN
CharacterSetArmorPercentage(_Dupe, 100.0);
CharacterSetMagicArmorPercentage(_Dupe, 100.0);
CharacterSetHitpointsPercentage(_Dupe, 100.0);
*/
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader_SuperEnemyUpgradeOverhaul"