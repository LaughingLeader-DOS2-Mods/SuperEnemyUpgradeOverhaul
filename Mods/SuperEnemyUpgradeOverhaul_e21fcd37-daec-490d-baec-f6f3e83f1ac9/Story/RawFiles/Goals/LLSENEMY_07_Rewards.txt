Version 1
SubGoalCombiner SGC_AND
INITSECTION
LLSENEMY_Rewards_InitSettings();
KBSECTION
//REGION UPDATES
PROC
LeaderUpdater_ModUpdated("SuperEnemyUpgradeOverhaul", "LaughingLeader", (STRING)_OldVersion, (STRING)_NewVersion)
AND
LeaderLib_StringExt_QRY_VersionIsLessThan(_OldVersion,1,5,0,0)
THEN
LeaderLog_Log("TRACE", "[LLENEMY_07_Rewards:LeaderUpdater_ModUpdated] Updating upgrade settings from version [",_OldVersion,"].");
LLSENEMY_Rewards_Internal_ClearSettings();
LLSENEMY_Rewards_InitSettings();
//END_REGION

//REGION SETTINGS
PROC
LLSENEMY_Rewards_InitSettings()
THEN
LLSENEMY_Rewards_AddTreasurePool("LLENEMY.Rewards.Easy", 1, 10);
LLSENEMY_Rewards_AddTreasurePool("LLENEMY.Rewards.Medium", 11, 16);
LLSENEMY_Rewards_AddTreasurePool("LLENEMY.Rewards.Hard", 17, 31);
LLSENEMY_Rewards_AddTreasurePool("LLENEMY.Rewards.Insane", 32, 99);
LLSENEMY_Rewards_AddTreasurePool("LLENEMY.Rewards.Impossible", 100, 999);

LLSENEMY_Rewards_AddTreasure("LLENEMY.Rewards.Easy", "LLENEMY_CP_Easy_Common", 50);
LLSENEMY_Rewards_AddTreasure("LLENEMY.Rewards.Easy", "LLENEMY_CP_Easy_Uncommon", 10);
LLSENEMY_Rewards_AddTreasure("LLENEMY.Rewards.Easy", "LLENEMY_CP_Easy_Rare", 4);

LLSENEMY_Rewards_AddTreasure("LLENEMY.Rewards.Medium", "LLENEMY_CP_Medium_Common", 50);
LLSENEMY_Rewards_AddTreasure("LLENEMY.Rewards.Medium", "LLENEMY_CP_Medium_Uncommon", 10);
LLSENEMY_Rewards_AddTreasure("LLENEMY.Rewards.Medium", "LLENEMY_CP_Medium_Rare", 1);

LLSENEMY_Rewards_AddTreasure("LLENEMY.Rewards.Hard", "LLENEMY_CP_Hard_Common", 50);
LLSENEMY_Rewards_AddTreasure("LLENEMY.Rewards.Hard", "LLENEMY_CP_Hard_Rare", 10);

LLSENEMY_Rewards_AddTreasure("LLENEMY.Rewards.Insane", "LLENEMY_CP_Insane_Common", 50);
LLSENEMY_Rewards_AddTreasure("LLENEMY.Rewards.Insane", "LLENEMY_CP_Insane_Rare", 10);

LLSENEMY_Rewards_AddTreasure("LLENEMY.Rewards.Impossible", "LLENEMY_CP_Impossible_Common", 50);
LLSENEMY_Rewards_AddTreasure("LLENEMY.Rewards.Impossible", "LLENEMY_CP_Impossible_Rare", 10);

LLSENEMY_Rewards_AddTreasureEffect("LLENEMY_CP_Easy_Rare", "LLENEMY_FX_Rewards_Lucky_01");
LLSENEMY_Rewards_AddTreasureEffect("LLENEMY_CP_Medium_Rare", "LLENEMY_FX_Rewards_Lucky_02");
LLSENEMY_Rewards_AddTreasureEffect("LLENEMY_CP_Hard_Common", "LLENEMY_FX_Rewards_Lucky_03");
LLSENEMY_Rewards_AddTreasureEffect("LLENEMY_CP_Hard_Rare", "LLENEMY_FX_Rewards_Lucky_04");
LLSENEMY_Rewards_AddTreasureEffect("LLENEMY_CP_Insane_Rare", "LLENEMY_FX_Rewards_Lucky_05");
LLSENEMY_Rewards_AddTreasureEffect("LLENEMY_CP_Impossible_Rare", "LLENEMY_FX_Rewards_Lucky_05");

//Default if nothing else plays
LLSENEMY_Rewards_AddRewardEffect("LLENEMY_FX_Rewards_Generic_Weak_01", 1, 16);
LLSENEMY_Rewards_AddRewardEffect("LLENEMY_FX_Rewards_Generic_Strong_01", 17, 999);

PROC
LLSENEMY_Rewards_Internal_ClearSettings()
THEN
SysClear("DB_LLSENEMY_Rewards_TreasurePool", 3);
SysClear("DB_LLSENEMY_Rewards_PoolVariables", 3);
SysClear("DB_LLSENEMY_Rewards_CPEffects", 3);
SysClear("DB_LLSENEMY_Rewards_TreasureEffects", 2);

PROC
LLSENEMY_Rewards_AddTreasurePool((STRING)_Name, (INTEGER)_MinAmount, (INTEGER)_MaxAmount)
THEN
DB_LLSENEMY_Rewards_TreasurePool(_Name, _MinAmount, _MaxAmount);

PROC
LLSENEMY_Rewards_AddTreasure((STRING)_Pool, (STRING)_Treasure, (INTEGER)_Range)
AND
NOT DB_LLSENEMY_Rewards_PoolVariables(_Pool, _,_)
THEN
DB_LLSENEMY_Rewards_PoolVariables(_Pool, 1, 1);

PROC
LLSENEMY_Rewards_AddTreasure((STRING)_Pool, (STRING)_Treasure, (INTEGER)_Range)
AND
DB_LLSENEMY_Rewards_PoolVariables(_Pool, _StartInt, _LastInt)
AND
IntegerSum(_StartInt, _Range, _EndInt)
AND
IntegerSum(_EndInt, 1, _NextStartInt)
THEN
NOT DB_LLSENEMY_Rewards_PoolVariables(_Pool, _StartInt, _LastInt);
DB_LLSENEMY_Rewards_PoolVariables(_Pool, _NextStartInt, _EndInt);
DB_LLSENEMY_Rewards_Treasure(_Pool, _Treasure, _StartInt, _EndInt);

PROC
LLSENEMY_Rewards_AddRewardEffect((STRING)_Effect, (INTEGER)_MinCP, (INTEGER)_MaxCP)
THEN
DB_LLSENEMY_Rewards_CPEffects(_Effect, _MinCP, _MaxCP);

PROC
LLSENEMY_Rewards_AddTreasureEffect((STRING)_Treasure, (STRING)_Effect)
THEN
DB_LLSENEMY_Rewards_TreasureEffects(_Treasure, _Effect);
//END_REGION

//REGION GET_TREASURE_LEVEL
QRY
LLSENEMY_Rewards_QRY_GetTreasureLevel((CHARACTERGUID)_Enemy, (INTEGER)_EnemyLevel, (INTEGER)_ScalingEnabled)
AND
DB_LLSENEMY_Rewards_TreasureLevel(_Enemy, _Level)
THEN
NOT DB_LLSENEMY_Rewards_TreasureLevel(_Enemy, _Level);

QRY
LLSENEMY_Rewards_QRY_GetTreasureLevel((CHARACTERGUID)_Enemy, (INTEGER)_EnemyLevel, 1)
AND
LeaderLib_Helper_QRY_GetHighestPlayerLevel()
AND
DB_LeaderLib_Helper_Temp_HighestLevelPlayer(_Host, _Level)
THEN
DB_LLSENEMY_Rewards_TreasureLevel(_Enemy, _Level);

QRY
LLSENEMY_Rewards_QRY_GetTreasureLevel((CHARACTERGUID)_Enemy, (INTEGER)_EnemyLevel, 0)
AND
LeaderLib_Helper_QRY_GetHighestPlayerLevel()
AND
DB_LeaderLib_Helper_Temp_HighestLevelPlayer(_Host, _Level)
AND
_Level < _EnemyLevel
THEN
DB_LLSENEMY_Rewards_TreasureLevel(_Enemy, _EnemyLevel);

QRY
LLSENEMY_Rewards_QRY_GetTreasureLevel((CHARACTERGUID)_Enemy, (INTEGER)_EnemyLevel, 0)
AND
DB_LeaderLib_Helper_Temp_HighestLevelPlayer(_Host, _Level)
AND
_Level >= _EnemyLevel
THEN
DB_LLSENEMY_Rewards_TreasureLevel(_Enemy, _Level);
//END_REGION

//REGION GENERATE
PROC
LLSENEMY_Rewards_GenerateTreasure((CHARACTERGUID)_SendTo, (STRING)_Treasure)
THEN
LLSENEMY_Rewards_GenerateTreasure(_SendTo, _Treasure, 1);

PROC
LLSENEMY_Rewards_GenerateTreasure((CHARACTERGUID)_SendTo, (STRING)_Treasure, 0)
AND
GlobalGetFlag("LLENEMY_EnemyLevelingEnabled", _ScalingEnabled)
AND
CharacterGetLevel(_SendTo, _Level)
AND
LLSENEMY_Rewards_QRY_GetTreasureLevel(_SendTo, _Level, _ScalingEnabled)
AND
DB_LLSENEMY_Rewards_TreasureLevel(_SendTo, _TreasureLevel)
THEN
NOT DB_LLSENEMY_Rewards_TreasureLevel(_SendTo, _TreasureLevel);
//CharacterGiveReward(_Char, _Treasure, 0);
GenerateTreasure(S_LLENEMY_LootGeneratorChest_76086dd5-f951-4ba3-a319-c204108a94c9, _Treasure, _TreasureLevel, _SendTo);
MoveAllItemsTo(S_LLENEMY_LootGeneratorChest_76086dd5-f951-4ba3-a319-c204108a94c9, _SendTo);

PROC
LLSENEMY_Rewards_GenerateTreasure((CHARACTERGUID)_SendTo, (STRING)_Treasure, 1)
AND
GlobalGetFlag("LLENEMY_EnemyLevelingEnabled", _ScalingEnabled)
AND
CharacterGetLevel(_SendTo, _Level)
AND
LLSENEMY_Rewards_QRY_GetTreasureLevel(_SendTo, _Level, _ScalingEnabled)
AND
DB_LLSENEMY_Rewards_TreasureLevel(_SendTo, _TreasureLevel)
THEN
NOT DB_LLSENEMY_Rewards_TreasureLevel(_SendTo, _TreasureLevel);
GenerateTreasure(S_LLENEMY_LootGeneratorChest_76086dd5-f951-4ba3-a319-c204108a94c9, _Treasure, _TreasureLevel, _SendTo);
ContainerIdentifyAll(S_LLENEMY_LootGeneratorChest_76086dd5-f951-4ba3-a319-c204108a94c9);
MoveAllItemsTo(S_LLENEMY_LootGeneratorChest_76086dd5-f951-4ba3-a319-c204108a94c9, _SendTo);
//END_REGION

QRY
LLSENEMY_Rewards_QRY_HasTreasure((CHARACTERGUID)_Char)
AND
DB_LLSENEMY_Rewards_Temp_TreasureToGenerate(_Char, _Treasure)
THEN
DB_NOOP(1);

//REGION CRITICAL_FAILURE_BONUS
PROC
LLSENEMY_Upgrades_OnCriticalFailure((CHARACTERGUID)_Char)
THEN
LLSENEMY_Rewards_AddBonusTreasureStatus(_Char);

PROC
LLSENEMY_Upgrades_OnTypeCriticalFailure((CHARACTERGUID)_Char, (STRING)_Group, (STRING)_Type)
AND
LLSENEMY_Rewards_QRY_TotalBonusIsBelow(_Char, 3)
THEN
LLSENEMY_Rewards_AddBonusTreasureStatus(_Char);

QRY
LLSENEMY_Rewards_QRY_TotalBonusIsBelow((CHARACTERGUID)_Char, (INTEGER)_MaxBonus)
AND
DB_LLSENEMY_Rewards_Temp_BonusTreasure(_Char, _Current)
AND
_Current < _MaxBonus
THEN
DB_NOOP(1);

QRY
LLSENEMY_Rewards_QRY_TotalBonusIsBelow((CHARACTERGUID)_Char, (INTEGER)_MaxBonus)
AND
NOT DB_LLSENEMY_Rewards_Temp_BonusTreasure(_Char, _)
THEN
DB_NOOP(1);

PROC
LLSENEMY_Rewards_AddBonusTreasureStatus((CHARACTERGUID)_Char)
AND
LeaderLib_Random_QRY(2)
AND
DB_LeaderLib_Random(_BonusTurns)
AND
IntegerSum(_BonusTurns, 2, _AdjustedBonusTurns)
AND
Real(_AdjustedBonusTurns, _BonusTurnsR)
AND
RealProduct(_BonusTurnsR, 6.0, _Duration)
THEN
NOT DB_LeaderLib_Random(_BonusTurns);
LLSENEMY_Rewards_Internal_IncrementBonusTreasure(_Char);
ApplyStatus(_Char, "LLENEMY_BONUS_TREASURE_ROLL", _Duration);

PROC
LLSENEMY_Rewards_Internal_IncrementBonusTreasure((CHARACTERGUID)_Char)
AND
NOT DB_LLSENEMY_Rewards_Temp_BonusTreasure(_Char, _)
THEN
DB_LLSENEMY_Rewards_Temp_BonusTreasure(_Char, 0);

PROC
LLSENEMY_Rewards_Internal_IncrementBonusTreasure((CHARACTERGUID)_Char)
AND
DB_LLSENEMY_Rewards_Temp_BonusTreasure(_Char, _Current)
AND
IntegerSum(_Current, 1, _Next)
THEN
NOT DB_LLSENEMY_Rewards_Temp_BonusTreasure(_Char, _Current);
DB_LLSENEMY_Rewards_Temp_BonusTreasure(_Char, _Next);

IF
CharacterStatusApplied(_Char, "LLENEMY_BONUS_TREASURE_ROLL", _Cause)
AND
NOT DB_LLSENEMY_Rewards_Temp_BonusTreasure(_Char, _)
AND
CharacterGetDisplayName(_Char, _, _Name)
AND
String(_Cause, _CauseStr)
THEN
LeaderLog_Log("TRACE", "[LLENEMY:Rewards:CharacterStatusApplied] [ERROR] [LLENEMY_BONUS_TREASURE_ROLL] was being applied to [",_Name,"] by [",_CauseStr,"] without any database entries!");
RemoveStatus(_Char, "LLENEMY_BONUS_TREASURE_ROLL");

IF
CharacterStatusRemoved(_Char, "LLENEMY_BONUS_TREASURE_ROLL", _)
AND
DB_LLSENEMY_Rewards_Temp_BonusTreasure(_Char, _Current)
AND
_Current > 0
AND
IntegerSubtract(_Current, 1, _Next)
THEN
NOT DB_LLSENEMY_Rewards_Temp_BonusTreasure(_Char, _Current);
DB_LLSENEMY_Rewards_Temp_BonusTreasure(_Char, _Next);

IF
CharacterStatusRemoved(_Char, "LLENEMY_BONUS_TREASURE_ROLL", _)
AND
DB_LLSENEMY_Rewards_Temp_BonusTreasure(_Char, _Current)
AND
_Current <= 0
THEN
NOT DB_LLSENEMY_Rewards_Temp_BonusTreasure(_Char, _Current);

IF
DB_LLSENEMY_Rewards_Temp_BonusTreasure(_Char, _Bonuses)
AND
NOT GetVarInteger(_Char, "LLENEMY_ChallengePoints", _)
THEN
SetVarInteger(_Char, "LLENEMY_ChallengePoints", 0);

//Real unlucky enemies == big time loot. Chance for legendaries
IF
CharacterPrecogDying(_Char)
AND
DB_LLSENEMY_Rewards_Temp_BonusTreasure(_Char, _Bonuses)
AND
_Bonuses >= 2
AND
GetVarInteger(_Char, "LLENEMY_ChallengePoints", 0)
AND
LeaderLib_Random_QRY(1,999)
AND
DB_LeaderLib_Random(_CP)
THEN
NOT DB_LeaderLib_Random(_CP);
SetVarInteger(_Char, "LLENEMY_ChallengePoints", _CP);
//END_REGION

//REGION TREASURE_GENERATION
IF
CharacterPrecogDying(_Char)
AND
NOT DB_GlobalFlag("LLENEMY_RewardsDisabled")
AND
IsTagged(_Char, "LLENEMY_RewardsDisabled", 0)
AND
CharacterIsPlayer(_Char, 0)
AND
CharacterIsSummon(_Char, 0)
AND
HasActiveStatus(_Char, "LLENEMY_DUPLICANT", 0)
AND
IsTagged(_Char, "LLENEMY_Duplicant", 0)
THEN
LLSENEMY_Rewards_SetupTreasure(_Char);
LLSENEMY_Rewards_SetupBonusTreasure(_Char);

PROC
LLSENEMY_Rewards_SetupTreasure((CHARACTERGUID)_Char)
AND
GetVarInteger(_Char, "LLENEMY_ChallengePoints", _CP)
AND
_CP > 0
AND
DB_LLSENEMY_Rewards_TreasurePool(_Pool, _MinAmount, _MaxAmount)
AND
_CP <= _MaxAmount
AND
_CP >= _MinAmount
AND
DB_LLSENEMY_Rewards_PoolVariables(_Pool, _StartInt, _EndInt)
AND
LeaderLib_Random_QRY(_EndInt)
AND
DB_LeaderLib_Random(_Roll)
AND
DB_LLSENEMY_Rewards_Treasure(_Pool, _Treasure, _MinRoll, _MaxRoll)
AND
_Roll <= _MaxRoll
AND
_Roll >= _MinRoll
AND
CharacterGetDisplayName(_Char, _, _Name)
THEN
NOT DB_LeaderLib_Random(_Roll);
LeaderLog_Log("TRACE", "[LLENEMY:Rewards:CharacterPrecogDying] [",_Name,"] will generate treasure [",_Treasure,"] when dead.");
DB_LLSENEMY_Rewards_Temp_TreasureToGenerate(_Char, _Treasure);
ObjectSetFlag(_Char, "LLENEMY_GenerateRewards");

PROC
LLSENEMY_Rewards_SetupBonusTreasure((CHARACTERGUID)_Char)
AND
DB_LLSENEMY_Rewards_Temp_BonusTreasure(_Char, _Current)
AND
_Current > 0
AND
IntegerSubtract(_Current, 1, _Next)
AND
CharacterGetDisplayName(_Char, _, _Name)
THEN
NOT DB_LLSENEMY_Rewards_Temp_BonusTreasure(_Char, _Current);
DB_LLSENEMY_Rewards_Temp_BonusTreasure(_Char, _Next);
LeaderLog_Log("TRACE", "[LLENEMY:Rewards:CharacterPrecogDying] Adding bonus treasure to [",_Name,"].");
LLSENEMY_Rewards_SetupTreasure(_Char);
LLSENEMY_Rewards_SetupBonusTreasure(_Char);

PROC
LLSENEMY_Rewards_SetupTreasure((CHARACTERGUID)_Char)
AND
DB_LLSENEMY_Rewards_Temp_BonusTreasure(_Char, _Current)
AND
_Current <= 0
THEN
NOT DB_LLSENEMY_Rewards_Temp_BonusTreasure(_Char, _Current);

IF
CharacterPrecogDying(_Char)
AND
IsTagged(_Char, "LLENEMY_RewardsDisabled", 0)
THEN
LLSENEMY_Rewards_StartGeneration(_Char);

PROC
LLSENEMY_Rewards_StartGeneration((CHARACTERGUID)_Char)
AND
ObjectGetFlag(_Char, "LLENEMY_GenerateRewards", 1)
AND
DB_LLSENEMY_Rewards_Temp_TreasureToGenerate(_Char, _Treasure)
THEN
//LeaderLog_Log("TRACE", "[LLENEMY:Rewards:CharacterPrecogDying] [",_Name,"] generated treasure [",_Treasure,"].");
LLSENEMY_Rewards_GenerateTreasure(_Char, _Treasure);

/*
IF
CharacterPrecogDying(_Char)
AND
ObjectGetFlag(_Char, "LLENEMY_GenerateRewards", 1)
AND
GetPosition(_Char, _x, _y, _z)
AND
CharacterGetLevel(_Char, _Level)
AND
CreateItemTemplateAtPosition("LOOT_LeaderLib_BackPack_Invisible_98fa7688-0810-4113-ba94-9a8c8463f830", _X, _y, _z, _Backpack)
AND
LLSENEMY_Rewards_QRY_Internal_StoreBackpack(_Char, _Backpack)
AND
DB_LLSENEMY_Rewards_Temp_TreasureToGenerate(_Char, _Treasure)
AND
CharacterGetDisplayName(_Char, _, _Name)
THEN
LeaderLog_Log("TRACE", "[LLENEMY:Rewards:CharacterPrecogDying] [",_Name,"] generated treasure [",_Treasure,"].");
GenerateTreasure(_Backpack, _Treasure, _Level, _Char);
MoveAllItemsTo(_Backpack, _Char);

QRY
LLSENEMY_Rewards_QRY_Internal_StoreBackpack((CHARACTERGUID)_Char, (ITEMGUID)_Backpack)
THEN
DB_LLSENEMY_Rewards_Temp_Backpacks(_Char, _Backpack);
//PlaySound(_Char, "SE_FX_GP_ScriptedEvent_Fane_Romance_BuildUp");

IF
CharacterPrecogDying(_Char)
AND
DB_LLSENEMY_Rewards_Temp_Backpacks(_Char, _Backpack)
THEN
NOT DB_LLSENEMY_Rewards_Temp_Backpacks(_Char, _Backpack);
ItemRemove(_Backpack);
*/
//END_REGION

//REGION DEATH_EVENT
IF
CharacterDied(_Char)
AND
DB_LLSENEMY_Rewards_Temp_TreasureToGenerate(_Char, _Treasure)
THEN
LLSENEMY_Rewards_OnCharacterDied(_Char, _Treasure);

PROC
LLSENEMY_Rewards_OnCharacterDied((CHARACTERGUID)_Char, (STRING)_Treasure)
AND
GetPosition(_Char, _x, _y, _z)
AND
DB_LLSENEMY_Rewards_TreasureEffects(_Treasure, _Effect)
AND
CharacterGetDisplayName(_Char, _, _Name)
THEN
LeaderLog_Log("TRACE", "[LLENEMY:Rewards:CharacterDied] [",_Name,"] Played treasure effect [",_Effect,"] for treasure [",_Treasure,"].");
PlayEffectAtPosition(_Effect, _x, _y, _z);
DB_LLSENEMY_Rewards_Temp_PlayedEffect(_Char);
//PlaySound(_Char, "UI_Game_PerceptionReveal_Puzzle");

PROC
LLSENEMY_Rewards_OnCharacterDied((CHARACTERGUID)_Char, (STRING)_Treasure)
AND
DB_LLSENEMY_Rewards_Temp_TreasureToGenerate(_Char, _Treasure)
THEN
NOT DB_LLSENEMY_Rewards_Temp_TreasureToGenerate(_Char, _Treasure);

PROC
LLSENEMY_Rewards_OnCharacterDied((CHARACTERGUID)_Char, (STRING)_Treasure)
AND
NOT DB_LLSENEMY_Rewards_Temp_PlayedEffect(_Char)
AND
ObjectGetFlag(_Char, "LLENEMY_GenerateRewards", 1)
AND
GetVarInteger(_Char, "LLENEMY_ChallengePoints", _CP)
AND
_CP > 0
AND
GetPosition(_Char, _x, _y, _z)
AND
DB_LLSENEMY_Rewards_CPEffects(_Effect, _MinCP, _MaxCP)
AND
_CP <= _MaxCP
AND
_CP >= _MinCP
AND
CharacterGetDisplayName(_Char, _, _Name)
AND
IntegertoString(_CP, _CpStr)
THEN
LeaderLog_Log("TRACE", "[LLENEMY:Rewards:CharacterDied] [",_Name,"] Played treasure effect [",_Effect,"] for Challenge Points value [",_CpStr,"].");
PlayEffectAtPosition(_Effect, _x, _y, _z);
//PlaySound(_Char, "UI_Game_PerceptionReveal_Puzzle");

PROC
LLSENEMY_Rewards_OnCharacterDied((CHARACTERGUID)_Char, (STRING)_Treasure)
AND
DB_LLSENEMY_Rewards_Temp_PlayedEffect(_Char)
THEN
NOT DB_LLSENEMY_Rewards_Temp_PlayedEffect(_Char);

PROC
LLSENEMY_Rewards_OnCharacterDied((CHARACTERGUID)_Char, (STRING)_Treasure)
AND
ObjectGetFlag(_Char, "LLENEMY_GenerateRewards", 1)
THEN
ObjectClearFlag(_Char, "LLENEMY_GenerateRewards");
//END_REGION

//REGION DUPLICANT_TREASURE
IF
CharacterPrecogDying(_Dupe)
AND
DB_LLSENEMY_Duplication_Temp_Active(_Enemy, _Dupe, _Region)
AND
NOT DB_GlobalFlag("LLENEMY_RewardsDisabled")
THEN
DB_LLSENEMY_Rewards_Temp_TreasureToGenerate(_Dupe, "LLENEMY_ShadowOrbRewards");
LLSENEMY_Rewards_SetupTreasure(_Dupe);
LLSENEMY_Rewards_SetupBonusTreasure(_Dupe);
LLSENEMY_Rewards_SpawnShadowOrb(_Dupe);

PROC
LLSENEMY_Rewards_SpawnShadowOrb((CHARACTERGUID)_Dupe)
AND
NOT DB_LLSENEMY_Duplication_Temp_ShadowOrbs(_Dupe, _)
AND
GetPosition(_Dupe, _x, _y, _z)
AND
CreateItemTemplateAtPosition("CONT_LLENEMY_DuplicantTreasure_b6773d33-18e4-4fa3-abe0-85d33c30df0a", _x, _y, _z, _Container)
THEN
NRD_ItemSetPermanentBoostInt(_Container, "Value", 0);
NRD_ItemSetPermanentBoostInt(_Container, "Weight", 0);
DB_LLSENEMY_Duplication_Temp_ShadowOrbs(_Dupe, _Container);
PlayEffectAtPosition("LLENEMY_FX_ShadowOrb_Spawn_01", _x, _y, _z);

PROC
LLSENEMY_Rewards_SpawnShadowOrb((CHARACTERGUID)_Dupe)
AND
DB_LLSENEMY_Duplication_Temp_ShadowOrbs(_Dupe, _Container)
AND
GlobalGetFlag("LLENEMY_EnemyLevelingEnabled", _ScalingEnabled)
AND
CharacterGetLevel(_Dupe, _Level)
AND
LLSENEMY_Rewards_QRY_GetTreasureLevel(_Dupe, _Level, _ScalingEnabled)
AND
DB_LLSENEMY_Rewards_TreasureLevel(_Dupe, _TreasureLevel)
AND
DB_LLSENEMY_Rewards_Temp_TreasureToGenerate(_Dupe, _Treasure)
THEN
NOT DB_LLSENEMY_Rewards_Temp_TreasureToGenerate(_Dupe, _Treasure);
GenerateTreasure(_Container, _Treasure, _TreasureLevel, _Dupe);
ContainerIdentifyAll(_Container);

PROC
LLSENEMY_Rewards_SpawnShadowOrb((CHARACTERGUID)_Dupe)
AND
DB_LLSENEMY_Rewards_TreasureLevel(_Dupe, _TreasureLevel)
THEN
NOT DB_LLSENEMY_Rewards_TreasureLevel(_Dupe, _TreasureLevel);

PROC
LLSENEMY_Rewards_SpawnShadowOrb((CHARACTERGUID)_Dupe)
AND
DB_LLSENEMY_Duplication_Temp_ShadowOrbs(_Dupe, _Container)
THEN
//MoveAllItemsTo(_Dupe, _Container, 0, 0, 1);
LLSENEMY_Rewards_Internal_ShadowCorruptItems(_Dupe, _Container);
ObjectClearFlag(_Dupe, "LLENEMY_GenerateRewards", 0);

IF
StoryEvent((ITEMGUID)_Item, "LLENEMY_Container_OnClosed_CheckDestroy")
AND
ObjectExists(_Item, 1)
AND
ItemIsDestroyed(_Item, 1)
THEN
ItemRemove(_Item);

IF
StoryEvent((ITEMGUID)_Item, "LLENEMY_Container_OnClosed_CheckDestroy")
AND
ItemIsDestroyed(_Item, 0)
AND
GetUUID(_Item, _UUID)
THEN
NRD_ModCall("SuperEnemyUpgradeOverhaul", "DestroyEmptyContainer", _UUID);

IF
StoryEvent((ITEMGUID)_Item, "LLENEMY_EmptyContainer_CheckContents")
AND
NRD_ItemGetStatsId(_Item, _Stats)
AND
StringSub(_Stats, 0, 1, _Start)
AND
_Start == "_"
THEN
ItemRemove(_Item);

IF
StoryEvent((ITEMGUID)_Item, "LLENEMY_EmptyContainer_CheckAgain")
AND
ItemIsDestroyed(_Item, 0)
AND
GetUUID(_Item, _UUID)
THEN
NRD_ModCall("SuperEnemyUpgradeOverhaul", "DestroyEmptyContainer", _UUID);

IF
StoryEvent((ITEMGUID)_Container, "LLENEMY_Container_OnDestroyed")
AND
DB_LLSENEMY_Duplication_Temp_ShadowOrbs(_Dupe, _Container)
THEN
NOT DB_LLSENEMY_Duplication_Temp_ShadowOrbs(_Dupe, _Container);

IF
RegionEnded(_)
AND
DB_LLSENEMY_Duplication_Temp_ShadowOrbs(_Dupe, _Container)
THEN
NOT DB_LLSENEMY_Duplication_Temp_ShadowOrbs(_Dupe, _Container);
//END_REGION

//REGION DUPLICANT_SHADOW_REWARDS
PROC
LLSENEMY_Rewards_Internal_ShadowCorruptItems((CHARACTERGUID)_Dupe, (ITEMGUID)_Container)
THEN
LeaderLib_Timers_StartObjectTimer(_Container, 100, "Timers_LLENEMY_Duplication_CorruptShadowRewards", "LLENEMY_Duplication_CorruptShadowRewards");
LeaderLib_Timers_StartObjectTimer(_Container, 250, "Timers_LLENEMY_ShadowOrb_CheckEmpty", "LLENEMY_ShadowOrb_CheckEmpty");

IF
StoryEvent((ITEMGUID)_Container, "LLENEMY_Duplication_CorruptShadowRewards")
AND
GetUUID(_Container, _UUID)
THEN
NRD_ModCall("SuperEnemyUpgradeOverhaul", "ShadowCorruptContainerItems", _UUID);

IF
StoryEvent((ITEMGUID)_Container, "LLENEMY_ShadowOrb_CheckEmpty")
AND
GetUUID(_Container, _UUID)
THEN
NRD_ModCall("SuperEnemyUpgradeOverhaul", "CheckEmptyShadowOrb", _UUID);

IF
StoryEvent((ITEMGUID)_Item, "Iterators_LLENEMY_CorruptItem")
AND
GetUUID(_Item, _UUID)
THEN
NRD_ModCall("SuperEnemyUpgradeOverhaul", "ShadowCorruptItem", _UUID);
//END_REGION

//REGION SHADOW_ITEM_CRAFTING_BLOCKING
PROC
ProcBlockCombineItem((CHARACTERGUID)_Char, (ITEMGUID)_Item)
AND
IsTagged(_Item, "LLENEMY_ShadowItem", 1)
THEN
DB_CustomCombineItemResponse(_Char,_Item,1);
LeaderLog_LogTarget("NOTIFICATION", _Char, "LLENEMY_Notification_ShadowItem_NoCrafting");
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader_SuperEnemyUpgradeOverhaul"
